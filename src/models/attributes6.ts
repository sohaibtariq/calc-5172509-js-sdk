/**
 * Merged ApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { object, optional, Schema, string, unknown } from '../schema';
import { PolicyStateEnum, policyStateEnumSchema } from './policyStateEnum';
import { StatusEnum, statusEnumSchema } from './statusEnum';

/** Attributes that describe a policy resource with optional writeable money fields. */
export interface Attributes6 {
  /** Date time when this resource was created in our system. */
  createdDate?: string;
  /** Date time when this resource was last modified in our system. */
  modifiedDate?: string;
  /** UUID that identifies the document for this policy. */
  documentId?: string;
  /** The end date for this policy if it has been ended. */
  actualEndDate?: string;
  /** The status of the policy. */
  status?: StatusEnum;
  /** Our calculated earned premium thus far for this policy. */
  earnedPremium?: string;
  /** Our calculated earned tax thus far for this policy. */
  earnedTax?: string;
  /** Our calculated earned fees thus far for this policy. */
  earnedFees?: string;
  /** A value from the set denoting the reason for policy cancellation. */
  cancelReason?: string;
  /** User provided description for why policy was cancelled. */
  cancelDescription?: string;
  /** A unique alphanumeric string used as a human-readable value for the Policy. */
  policyNumber?: string;
  /** The date and time this policy went into effect. */
  effectiveDate?: string;
  /** Any value you wish to associate with this policy such as an ID from your system. */
  externalReference?: string;
  /** A value from the set denoting the user-selected limit of coverage. This is dependent on your product's configuration. */
  limit?: string;
  /** A value from the set denoting the user-selected deductible of coverage. This is dependent on your product's configuration. */
  deductible?: string;
  /** The two letter state code (including Washington DC) for the state in which the issured entity resides. */
  policyState?: PolicyStateEnum;
  /** Additional data about the policy. The required metadata fields are specific to your product. */
  metadata?: unknown;
  /** The policy's natural term end date and time. */
  termEndDate?: string;
  /** The installment plan schedule that determines invoicing and/or automatic payment dates. */
  installmentPlan?: string;
  /** The written premium for this policy. */
  writtenPremium?: string;
  /** The date and time that the policy was issued. */
  issueDate?: string;
  /** The most recently set date and time that a non-renewal notice was set to be sent. */
  nonRenewalNoticeDate?: string;
  /** The most recently set date and time that a cancellation notice was set to be sent. */
  cancellationNoticeDate?: string;
  /** The most recently set date and time that an allowed party requested a policy to be cancelled. */
  requestedCancellationDate?: string;
  /** The term state tax */
  stateTax?: string;
  /** The aggregate term state fees. */
  stateFees?: string;
  /** The term aggregate service fees */
  serviceFees?: string;
  /** This term premium . This value includes taxes only for admitted products */
  termPremium?: string;
  /** The term aggregate billing fees */
  billingFees?: string;
}

export const attributes6Schema: Schema<Attributes6> = object({
  createdDate: ['created_date', optional(string())],
  modifiedDate: ['modified_date', optional(string())],
  documentId: ['document_id', optional(string())],
  actualEndDate: ['actual_end_date', optional(string())],
  status: ['status', optional(statusEnumSchema)],
  earnedPremium: ['earned_premium', optional(string())],
  earnedTax: ['earned_tax', optional(string())],
  earnedFees: ['earned_fees', optional(string())],
  cancelReason: ['cancel_reason', optional(string())],
  cancelDescription: ['cancel_description', optional(string())],
  policyNumber: ['policy_number', optional(string())],
  effectiveDate: ['effective_date', optional(string())],
  externalReference: ['external_reference', optional(string())],
  limit: ['limit', optional(string())],
  deductible: ['deductible', optional(string())],
  policyState: ['policy_state', optional(policyStateEnumSchema)],
  metadata: ['metadata', optional(unknown())],
  termEndDate: ['term_end_date', optional(string())],
  installmentPlan: ['installment_plan', optional(string())],
  writtenPremium: ['written_premium', optional(string())],
  issueDate: ['issue_date', optional(string())],
  nonRenewalNoticeDate: ['non_renewal_notice_date', optional(string())],
  cancellationNoticeDate: ['cancellation_notice_date', optional(string())],
  requestedCancellationDate: [
    'requested_cancellation_date',
    optional(string()),
  ],
  stateTax: ['state_tax', optional(string())],
  stateFees: ['state_fees', optional(string())],
  serviceFees: ['service_fees', optional(string())],
  termPremium: ['term_premium', optional(string())],
  billingFees: ['billing_fees', optional(string())],
});
